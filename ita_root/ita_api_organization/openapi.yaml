openapi: 3.0.3
info:
  description: ITAv2.0用API
  version: 1.0.0
  title: ITA Version2.0 API
tags:

  - name: Menu Info
    description: メニュー情報の取得
  - name: Menu Filter
    description: レコードの取得
  - name: Menu Maintenance
    description: レコードの操作（登録/更新/廃止/復活/物理削除）
  - name: Menu MaintenanceAll
    description: レコードの一括操作（登録/更新/廃止/復活/物理削除）
  - name: Menu Excel
    description: Excelの取得・操作
  - name: User Info
    description: ユーザ情報の取得
  - name: System Info
    description: ITAの情報取得
  - name: Menu Create
    description: メニュー作成機能
  - name: Conductor Controll
    description: Conductorの情報取得・操作
  - name: Driver Controll
    description: Driverの情報取得・操作

paths:
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/info/:
    get:
      tags:
        - Menu Info
      description: メニューの基本情報および項目情報を取得する
      operationId: getMenuInfo
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      column_group_info:
                        $ref: '#/components/schemas/COLUMN_GROUP_INFO'
                      column_info:
                        $ref: '#/components/schemas/COLUMN_INFO'
                      menu_info:
                        $ref: '#/components/schemas/MENU_INFO'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
  
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/info/column/:
    get:
      tags:
        - Menu Info
      description: メニューの項目一覧(REST用項目名)を取得する
      operationId: getColumnList
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: array
                    items: {}
                    example: ["column1", "column2", "column3"]
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
  
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/info/pulldown/:
    get:
      tags:
        - Menu Info
      description: IDColumn項目のプルダウン選択用の一覧を取得する
      operationId: getPulldownList
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    items: {}
                    example: {IDColumn1: {"id1": "name1", "id2": "name2", "id3": "name3"}, IDColumn2: {"id1": "name1", "id2": "name2", "id3": "name3"}, IDColumn3: {"id1": "name1", "id2": "name2", "id3": "name3"}}
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/info/search/candidates/{column}/:
    get:
      tags:
        - Menu Info
      description: 表示フィルタで利用するプルダウン検索の候補一覧を取得する
      operationId: getSearchCandidates
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: column
          in: path
          description: REST用項目名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    items: {}
                    example: {"id1": "name1", "id2": "name2", "id3": "name3"}
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
  
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/filter/count/:
    get:
      tags:
        - Menu Filter
      description: レコード全件の件数を取得する
      operationId: getFilterCount
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: number
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
    post:
      tags:
        - Menu Filter
      description: 検索条件を指定し、レコードの件数する
      operationId: postFilterCount
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 検索条件を設定
              properties:
                rest_key_name:
                  $ref: '#/components/schemas/FILTER_REQUEST_PARAMETERS'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: number
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/filter/:
    get:
      tags:
        - Menu Filter
      description: レコードを全件取得する
      operationId: getFilter
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    items: {
                      $ref: '#/components/schemas/FILTER_PARAMETERS',
                    }
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
    post:
      tags:
        - Menu Filter
      description: 検索条件を指定し、レコードを取得する
      operationId: postFilter
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 検索条件を設定
              properties:
                rest_key_name:
                  $ref: '#/components/schemas/FILTER_REQUEST_PARAMETERS'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    items: {
                      $ref: '#/components/schemas/FILTER_PARAMETERS',
                    }
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/filter/journal/{uuid}/:
    get:
      tags:
        - Menu Filter
      description: レコードの履歴を取得する
      operationId: getJournal
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: uuid
          in: path
          description: UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    items: {
                      $ref: '#/components/schemas/FILTER_PARAMETERS',
                    }
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/maintenance/:
    post:
      tags:
        - Menu Maintenance
      description: レコードを登録する
      operationId: maintenanceRegister
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 登録する値を設定
              properties:
                parameter:
                  $ref: '#/components/schemas/MAINTENANCE_PARAMETER_P'
                file:
                  $ref: '#/components/schemas/MAINTENANCE_PARAMETER_F'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
  
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/maintenance/{uuid}/:
    patch:
      tags:
        - Menu Maintenance
      description: レコードを更新/廃止/復活する
      operationId: maintenanceUpdate
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: uuid
          in: path
          description: 対象のUUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 更新する値を設定。廃止/復活は廃止フラグを更新することで実施。
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/maintenance/all/:
    post:
      tags:
        - Menu MaintenanceAll
      description: レコードを一括で登録/更新/廃止/復活する
      operationId: maintenanceAll
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 登録/更新/廃止/復活するidとレコードの値を設定
              items: {
                $ref: '#/components/schemas/MAINTENANCE_PARAMETERS',
              }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/excel/format/:
    get:
      tags:
        - Menu Excel
      description: 新規登録用Excelを取得する
      operationId: getExcelFormat
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      TABLE:
                       $ref: '#/components/schemas/TABLE'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/excel/:
    get:
      tags:
        - Menu Excel
      description: 全件のExcelを取得する
      operationId: getExcelFilter
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      TABLE:
                       $ref: '#/components/schemas/TABLE'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
    post:
      tags:
        - Menu Excel
      description: 検索条件を指定し、Excelを取得する
      operationId: postExcelFilter
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 検索条件を設定
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      TABLE:
                       $ref: '#/components/schemas/TABLE'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/excel/maintenance/:
    post:
      tags:
        - Menu Excel
      description: Excelでレコードを登録/更新/廃止/復活する
      operationId: postExcelMaintenance
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 検索条件を設定
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      TABLE:
                       $ref: '#/components/schemas/TABLE'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/excel/journal/:
    get:
      tags:
        - Menu Excel
      description: 変更履歴のExcelを取得する
      operationId: getExcelJournal
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      TABLE:
                       $ref: '#/components/schemas/TABLE'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/user/:
    get:
      tags:
        - User Info
      description: ユーザの権限情報を取得する
      operationId: getUserAuth
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      roles:
                        example: ["role1", "role2", "role3"]
                      user_id:
                        example: "id-xxxxxxxx"
                      user_name:
                        example: "User Name"
                      workspaces:
                        example: ["workspace1", "workspace2", "workspace3"]
                  message:
                    type: string
                    example: SUCCESS
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/user/menus/:
    get:
      tags:
        - User Info
      description: ユーザがアクセス可能なメニューグループ・メニューの一覧を取得する
      operationId: getUserMenus
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      menu_groups:
                        example: [
                          {
                            "disp_seq": 10,
                            "id": "101",
                            "parent_id": "",
                            "menu_group_name": "メニューグループ1",
                            "menus": [
                              {"disp_seq": 10, "id": "10101", "menu_name": "メニュー1", "menu_name_rest": "menu_1"},
                              {"disp_seq": 20, "id": "10102", "menu_name": "メニュー2", "menu_name_rest": "menu_2"},
                              {"disp_seq": 30, "id": "10103", "menu_name": "メニュー3", "menu_name_rest": "menu_3"}
                            ]
                          },
                          {
                            "disp_seq": 20,
                            "id": "102",
                            "parent_id": "101",
                            "menu_group_name": "メニューグループ2",
                            "menus": [
                              {"disp_seq": 10, "id": "10104", "menu_name": "メニュー4", "menu_name_rest": "menu_4"},
                              {"disp_seq": 20, "id": "10105", "menu_name": "メニュー5", "menu_name_rest": "menu_5"},
                              {"disp_seq": 30, "id": "10106", "menu_name": "メニュー6", "menu_name_rest": "menu_6"},
                            ]
                          },
                          {
                            "disp_seq": 30,
                            "id": "103",
                            "parent_id": "101",
                            "menu_group_name": "メニューグループ3",
                            "menus": [
                              {"disp_seq": 10, "id": "10107", "menu_name": "メニュー7", "menu_name_rest": "menu_7"},
                              {"disp_seq": 20, "id": "10108", "menu_name": "メニュー8", "menu_name_rest": "menu_8"},
                              {"disp_seq": 30, "id": "10109", "menu_name": "メニュー9", "menu_name_rest": "menu_9"},
                            ]
                          }
                        ]
                  message:
                    type: string
                    example: SUCCESS
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/user/menus/panels/:
    get:
      tags:
        - User Info
      description: メニューグループの画像を取得する
      operationId: getMenuGroupPanels
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    description: メニューグループIDがkeyになる
                    additionalProperties:
                      type: string
                      properties:
                        panelFileEncoded:
                          description: メニューグループの画像ファイルをbase64エンコードした値
                  message:
                    type: string
                    example: SUCCESS
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/version/:
    get:
      tags:
        - System Info
      description: ITAのバージョン情報を取得する
      operationId: getItaVersion
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
               schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    example: 
                      {
                        version: string,
                        installed_driver:[
                          string,
                          string
                          ]
                      }
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/create/execute/:
    post:
      tags:
        - Menu Create
      description: メニュー作成実行
      operationId: executeMenuCreate
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 作成対象のメニュー定義一覧IDを指定(複数指定可)
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/execute/:
    post:
      tags:
        - Menu Create
      description: メニュー定義および作成の実行
      operationId: defineAndExecuteMenuCreate
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: メニュー定義用パラメータ
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/:
    get:
      tags:
        - Menu Create
      description: メニュー定義・作成(新規)用の情報取得
      operationId: getMenuCreateData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/{menu_create}/:
    get:
      tags:
        - Menu Create
      description: メニュー定義・作成(既存)用の情報取得
      operationId: getExistMenuCreateData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu_create
          in: path
          description: 「メニュー定義一覧」の「メニュー名(REST)」
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/pulldown/initial/{menu}/{column}/:
    get:
      tags:
        - Menu Create
      description: 「プルダウン選択」項目で選択した対象の「初期値」候補一覧取得
      operationId: getPulldownInitial
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: 「プルダウン選択」で指定した対象のメニュー名(rest用)
          required: true
          schema:
            type: string
        - name: column
          in: path
          description: 「プルダウン選択」で指定した対象のカラム名(rest用)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/reference/item/{menu}/{column}/:
    get:
      tags:
        - Menu Create
      description: 「プルダウン選択」項目で選択した対象の「参照項目」候補一覧取得
      operationId: getReferenceItem
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: 「プルダウン選択」で指定した対象のメニュー名(rest用)
          required: true
          schema:
            type: string
        - name: column
          in: path
          description: 「プルダウン選択」で指定した対象のカラム名(rest用)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/class/info/:
    get:
      tags:
        - Conductor Controll
      description: ConductorClassの基本情報取得
      operationId: getConductorClassInfo
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      list:
                        $ref: '#/components/schemas/CONDUCTOR_INFO_LIST'
                      dict:
                        $ref: '#/components/schemas/CONDUCTOR_INFO_DICT'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/class/{conductor_class_id}/:
    get:
      tags:
        - Conductor Controll
      description: ConductorClassの情報取得
      operationId: getConductorClassData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_class_id
          in: path
          description: Conductor Class ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/class/maintenance/:
    post:
      tags:
        - Conductor Controll
      description: Conductorの新規登録
      operationId: postConductorData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 登録するConductorの構成情報
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/class/maintenance/{conductor_class_id}/:
    patch:
      tags:
        - Conductor Controll
      description: Conductorの更新
      operationId: patchConductorData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_class_id
          in: path
          description: Conductor Class ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 更新するConductorの構成情報
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE' 

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/info/:
    get:
      tags:
        - Conductor Controll
      description: Conductor,Operationのメニューの基本情報および項目情報を取得する
      operationId: getConductorExecuteInfo
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      conductor_list:
                        type: object
                        properties:
                          column_group_info:
                            $ref: '#/components/schemas/COLUMN_GROUP_INFO'
                          column_info:
                            $ref: '#/components/schemas/COLUMN_INFO'
                          menu_info:
                            $ref: '#/components/schemas/MENU_INFO'
                      operation_list:
                        type: object
                        properties:
                          column_group_info:
                            $ref: '#/components/schemas/COLUMN_GROUP_INFO'
                          column_info:
                            $ref: '#/components/schemas/COLUMN_INFO'
                          menu_info:
                            $ref: '#/components/schemas/MENU_INFO'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/filter/{target}/:
    post:
      tags:
        - Conductor Controll
      description: Conductor,Operationを対象に、検索条件を指定し、レコードを取得する
      operationId: postExecuteFilter
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: target
          in: path
          description: conductor_list or operation_list
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 検索条件を設定
              properties:
                rest_key_name:
                  $ref: '#/components/schemas/FILTER_REQUEST_PARAMETERS'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    items: {
                      $ref: '#/components/schemas/FILTER_PARAMETERS',
                    }
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/filter/{target}/search/candidates/{column}/:
    get:
      tags:
        - Conductor Controll
      description: 表示フィルタで利用するプルダウン検索の候補一覧を取得する
      operationId: getExecuteSearchCandidates
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: target
          in: path
          description: conductor_list or operation_list
          required: true
          schema:
            type: string
        - name: column
          in: path
          description: REST用項目名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    items: {}
                    example: {"id1": "name1", "id2": "name2", "id3": "name3"}
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'


  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/class/info/:
    get:
      tags:
        - Conductor Controll
      description: ConductorClassの基本情報取得
      operationId: getConductorExecuteClassInfo
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      list:
                        $ref: '#/components/schemas/CONDUCTOR_INFO_LIST'
                      dict:
                        $ref: '#/components/schemas/CONDUCTOR_INFO_DICT'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/class/{conductor_class_id}/:
    get:
      tags:
        - Conductor Controll
      description: ConductorClassの情報取得
      operationId: getConductorExecuteClassData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_class_id
          in: path
          description: Conductor Class ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/:
    post:
      tags:
        - Conductor Controll
      description: Conductor作業実行
      operationId: postConductorExcecute
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 作業実行するConductorの構成情報
              type: object
              properties:
                conductor_class_id: 
                  type: string
                operation_id: 
                  type: string
                schedule_date: 
                  type: string
                  example: "YYYY/MM/DD hh:mm"
                conductor_data:
                  type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/info/{conductor_instance_id}/:
    get:
      tags:
        - Conductor Controll
      description: Conductorの基本情報取得
      operationId: getConductorInfo
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_instance_id
          in: path
          description: Conductor Instance ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      list:
                        $ref: '#/components/schemas/CONDUCTOR_INFO_LIST'
                      dict:
                        $ref: '#/components/schemas/CONDUCTOR_INFO_DICT'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/:
    get:
      tags:
        - Conductor Controll
      description: Conductor作業の情報取得
      operationId: getConductorInstanceData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_instance_id
          in: path
          description: Conductor Instance ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      conductor_class:
                        type: object
                      conductor:
                        $ref: '#/components/schemas/CONDUCTOR_RESULT'
                      node:
                        $ref: '#/components/schemas/NODE_RESULT'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/cancel/:
    patch:
      tags:
        - Conductor Controll
      description: Conductor作業の予約取り消し
      operationId: patchConductorCancel
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_instance_id
          in: path
          description: Conductor Instance ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/scram/:
    patch:
      tags:
        - Conductor Controll
      description: Conductor作業の緊急停止
      operationId: patchConductorScram
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_instance_id
          in: path
          description: Conductor Instance ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/node/{node_instance_id}/relese/:
    patch:
      tags:
        - Conductor Controll
      description: Conductor作業の一時停止解除
      operationId: patchConductorRelese
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_instance_id
          in: path
          description: Conductor Instance ID
          required: true
          schema:
            type: string
        - name: node_instance_id
          in: path
          description: Node Instance ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/input_data/:
    get:
      tags:
        - Conductor Controll
      description: Conductor作業の投入データ
      operationId: getConductorInputData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_instance_id
          in: path
          description: Conductor Instance ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: string
                    example: "All movement input data zip base64 string"
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/result_data/:
    get:
      tags:
        - Conductor Controll
      description: Conductor作業の結果データ
      operationId: getConductorResultData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: conductor_instance_id
          in: path
          description: Conductor Instance ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: string
                    example: "All movement result data zip base64 string"
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  # Driver Controll
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute/:
    post:
      tags:
        - Driver Controll
      description: Driver作業実行
      operationId: postDriverExcecute
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 作業実行するDriverの構成情報
              type: object
              properties:
                movement_id: 
                  type: string
                operation_id: 
                  type: string
                schedule_date: 
                  type: string
                  example: "YYYY/MM/DD hh:mm"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    example: {execution_no: string}
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute_dry_run/:
    post:
      tags:
        - Driver Controll
      description: |
        Driver作業実行（ドライラン）</br>
        AnsibleDriverの場合はDryRun、TerraformDriverの場合はPlanのみの実行を行う
      operationId: postDriverExecuteDryRun
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 作業実行するDriverの構成情報
              type: object
              properties:
                movement_id: 
                  type: string
                operation_id: 
                  type: string
                schedule_date: 
                  type: string
                  example: "YYYY/MM/DD hh:mm"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    example: {execution_no: string}
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute_check_parameter/:
    post:
      tags:
        - Driver Controll
      description: Driver作業実行(実行時に使用するパラメータ確認)
      operationId: postDriverExecuteCheckParameter
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 作業実行するDriverの構成情報
              type: object
              properties:
                movement_id: 
                  type: string
                operation_id: 
                  type: string
                schedule_date: 
                  type: string
                  example: "YYYY/MM/DD hh:mm"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    example: {execution_no: string}
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/{execution_no}/:
    get:
      tags:
        - Driver Controll
      description: Driver作業実行の状態取得
      operationId: getDriverExecuteData
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: execution_no
          in: path
          description: 実行No
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/{execution_no}/cancel/:
    patch:
      tags:
        - Driver Controll
      description: Driver作業実行の予約取消
      operationId: postDriverCancel
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: execution_no
          in: path
          description: 実行No
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/{execution_no}/scram/:
    patch:
      tags:
        - Driver Controll
      description: Driver作業実行の緊急停止
      operationId: postDriverScram
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: execution_no
          in: path
          description: 実行No
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute/info/:
    get:
      tags:
        - Driver Controll
      description: Movement,Operationのメニューの基本情報および項目情報を取得する
      operationId: getDriverExecuteInfo
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    properties:
                      movement_list:
                        type: object
                        properties:
                          column_group_info:
                            $ref: '#/components/schemas/COLUMN_GROUP_INFO'
                          column_info:
                            $ref: '#/components/schemas/COLUMN_INFO'
                          menu_info:
                            $ref: '#/components/schemas/MENU_INFO'
                      operation_list:
                        type: object
                        properties:
                          column_group_info:
                            $ref: '#/components/schemas/COLUMN_GROUP_INFO'
                          column_info:
                            $ref: '#/components/schemas/COLUMN_INFO'
                          menu_info:
                            $ref: '#/components/schemas/MENU_INFO'
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute/filter/{target}/:
    post:
      tags:
        - Driver Controll
      description: Movement,Operationを対象に、検索条件を指定し、レコードを取得する
      operationId: postDriverExecuteFilter
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: target
          in: path
          description: movement_list or operation_list
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: 検索条件を設定
              properties:
                rest_key_name:
                  $ref: '#/components/schemas/FILTER_REQUEST_PARAMETERS'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    items: {
                      $ref: '#/components/schemas/FILTER_PARAMETERS',
                    }
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'

  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute/filter/{target}/search/candidates/{column}/:
    get:
      tags:
        - Driver Controll
      description: 表示フィルタで利用するプルダウン検索の候補一覧を取得する
      operationId: getDriverExecuteSearchCandidates
      parameters:
        - name: organization_id
          in: path
          description: OrganizationID
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: menu
          in: path
          description: メニュー名
          required: true
          schema:
            type: string
        - name: target
          in: path
          description: movement_list or operation_list
          required: true
          schema:
            type: string
        - name: column
          in: path
          description: REST用項目名
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: 000-00000
                  data:
                    type: object
                    items: {}
                    example: {"id1": "name1", "id2": "name2", "id3": "name3"}
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'


components:
  schemas:
    TABLE:
      type: object
      properties:
        PAGE_NO:
          type: integer
        TD:
          type: object
        TD_IHP:
          type: object
        UNIQUE_VAL:
          type: object
    COLUMN_GROUP_INFO:
      description: カラムグループの並び順でg1, g2, g3...というkey名に格納される
      additionalProperties:
        type: object
        properties:
          column_group_id:
            type: string
          column_group_name:
            type: string
          parent_column_group_id:
            type: string
          parent_column_group_name:
            type: string
          columns:
            type: array
            items: {}
    COLUMN_INFO:
      description: column_disp_seqの順番で、c1, c2, c3...というkey名に格納される
      additionalProperties:
        type: object
        properties:
          column_id:
            description: 項目ID
            type: string
          column_name:
            description: 表示用項目名
            type: string
          column_name_rest:
            description: REST用項目名
            type: string
          column_group_id:
            description: カラムグループID
            type: string
          column_group_name:
            description: カラムグループ名
            type: string
          column_type:
            description: カラムタイプ
            type: integer
          column_disp_seq:
            description: 表示順
            type: integer
          description:
            description: 項目説明
            type: string
          ref_table_name:
            description: ID連携テーブル名
            type: string
          ref_pkey_name:
            description: ID連携テーブルPK
            type: string
          ref_col_name:
            description: ID連携項目名
            type: string
          ref_sort_conditions:
            description: ID連携ソート条件
            type: string
          ref_multi_lang:
            description: ID連携多言語対応有無
            type: string
          col_name:
            description: データベース上のカラム名
            type: string
          save_type:
            description: データベース上の保存形式
            type: string
          auto_input:
            description: 自動入力フラグ
            type: integer
          input_item:
            description: 入力対象フラグ
            type: integer
          view_item:
            description: 出力対象フラグ
            type: string
          unique_item:
            description: 必須入力フラグ
            type: integer
          required_item:
            description: 一意制約フラグ
            type: integer
          initial_value:
            description: 入力欄初期値
            type: string
          validate_option:
            description: バリデーション値
            type: object
          before_validate_register:
            description: 個別バリデーション(前)
            type: object
          after_validate_register:
            description: 個別バリデーション(後)
            type: object
    MENU_INFO:
      type: object
      properties:
        menu_info:
          description: メニューの説明
          type: string
        menu_group_id:
          description: メニューグループID
          type: string
        menu_group_name:
          description: メニューグループの名称
          type: string
        parent_menu_group_id:
          description: 親メニューグループID
          type: string
        parent_menu_group_name:
          description: 親メニューグループの名称
          type: string
        menu_id:
          description: メニューID
          type: string
        menu_name:
          description: メニューの名称
          type: string
        sheet_type:
          description: シートタイプ
          type: string
        history_table_flag:
          description: 履歴テーブル有無
          type: boolean
        table_name:
          description: テーブル名
          type: string
        view_name:
          description: ビュー名
          type: string
        pk_column_name_rest:
          description: PK項目名(REST）
          type: string
        inherit:
          description: 継承フラグ
          type: boolean
        vertical:
          description: 縦型フラグ
          type: boolean
        row_insert_flag:
          description: 登録許可フラグ
          type: boolean
        row_update_flag:
          description: 更新許可フラグ
          type: boolean
        row_disuse_flag:
          description: 廃止許可フラグ
          type: boolean
        row_reuse_flag:
          description: 復活許可フラグ
          type: boolean
        login_necessity:
          description: 認証有無
          type: boolean
        auto_filter_flg:
          description: オートフィルタフラグ
          type: boolean
        initial_filter_flg:
          description: 初回フィルタフラグ
          type: boolean
        web_print_limit:
          description: Web表示最大行数
          type: integer
        web_print_confirm:
          description: Web表示前確認行数
          type: integer
        xls_print_limit:
          description: Excel出力最大行数
          type: integer
        sort_key:
          description: ソートキー
          type: string
        privilege:
          description: メニューに対する権限
          type: integer
        columns:
          description: メニュー表示用のカラムおよびカラムグループの並び順
          type: array
          items: {}
    ERROR_TEMPLATE:
      type: object
      properties:
        result:
          type: string
          example: 001-002
        message:
          type: string

    FILTER_REQUEST_PARAMETERS:
      type: object
      properties:
        NORMAL:
          type: string
        LIST:
          items: {}
        RANGE:
          type: object
          properties:
            START:
              type: string
            END:
              type: string
  
    FILTER_PARAMETERS:
      type: object
      properties:
        parameter:
          type: object
          properties:
            rest_key_name:
              type: string
        file:
          type: object
          properties:
            rest_key_name:
              type: string
              example: base64 encode file

    MAINTENANCE_PARAMETER_P:
      type: object
      properties:
        rest_key_name:
          type: string
    MAINTENANCE_PARAMETER_F:
      type: object
      properties:
        rest_key_name:
          type: string
          example: base64 encode file
    MAINTENANCE_PARAMETERS:
      type: object
      properties:
        parameter:
          type: object
          properties:
            rest_key_name:
              type: string
        file:
          type: object
          properties:
            rest_key_name:
              type: string
              example: base64 encode file
        type:
          type: string
          example: Register/Update
  
    CONDUCTOR_INFO_LIST:
      type: object
      properties:
        conductor_status:
          type: array
          items: {}
          example:
            [
              {
                id: "string",
                name: "string"
              }
            ]
        node_status:
          type: array
          items: {}
          example:
            [
              {
                id: "string",
                name: "string"
              }
            ]
        node_type:
          type: array
          items: {}
          example:
            [
              {
                id: "string",
                name: "string"
              }
            ]
        movement:
          type: array
          items: {}
          example:
            [
              {
                id: "string",
                name: "string"
              }
            ]
        operation:
          type: array
          items: {}
          example:
            [
              {
                id: "string",
                name: "string"
              }
            ]
        conductors:
          type: array
          items: {}
          example:
            [
              {
                id: "string",
                name: "string"
              }
            ]
    
    CONDUCTOR_INFO_DICT:
      type: object
      properties:
        conductor_status:
          items: {}
          example: 
            "status_id1" : "status_name1"
            "status_id2" : "status_name2"
        node_status:
          items: {}
          example: 
            "status_id1" : "status_name1"
            "status_id2" : "status_name2"
        node_type:
          items: {}
          example: 
            "node_type_id1" : "node_type_name1"
            "node_type_id2" : "node_type_name2"
        movement:
          items: {}
          example: 
            "movement_id1" : "movement_name1"
            "movement_id2" : "movement_name2"
        operation:
          items: {}
          example: 
            "operation_id1" : "operation_name1"
            "operation_id2" : "operation_name2"
        conductor:
          items: {}
          example: 
            "conductor_id1" : "conductor_name1"
            "conductor_id2" : "conductor_name2"

    CONDUCTOR_RESULT:
      type: object
      properties:
        conductor_instance_id:
          type: string
          example: ConductorインスタンスID
        conductor_name:
          type: string
          example: Conductor名
        status_id:
          type: string
          example: ステータスID
        execution_user:
          type: string
          example: 作業実行ユーザー
        abort_execute_flag:
          type: string
          example: 緊急停止フラグ
        operation_id:
          type: string
          example: オペレーションID
        operation_name:
          type: string
          example: オペレーション名
        time_book:
          type: string
          example: 予約日時
        time_start:
          type: string
          example: 開始日時
        time_end:
          type: string
          example: 終了日時
        execution_log:
          type: string
          example: 実行ログ
        remarks:
          type: string
          example: 備考

    NODE_RESULT:
      type: object
      properties:
        node_name:
          type: object
          properties:
            node_instance_id:
              type: string
              example: NodeインスタンスID
            node_name:
              type: string
              example: Node名
            node_type:
              type: string
              example: Node種別
            status_id:
              type: string
              example: ステータスID
            status_file:
              type: string
              example: ステータスファイル
            skip:
              type: string
              example: スキップ
            remarks:
              type: string
              example: 備考
            time_start:
              type: string
              example: 開始日時
            time_end:
              type: string
              example: 終了日時
            operation_id:
              type: string
              example: オペレーションID
            operation_name:
              type: string
              example: オペレーション名
            jump:
              type: object
              example: {
                "menu_id": メニューID,
                "execution_id": 作業ID
              }
